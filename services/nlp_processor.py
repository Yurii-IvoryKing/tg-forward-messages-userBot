import cohere
import os
import aiohttp
import asyncio


class NLPProcessor:
    def __init__(self):
        self.api_key = os.getenv("COHERE_API_KEY")
        self.co = cohere.Client(self.api_key)
        self.keywords = self._load_keywords()
        self.examples = [
            {
                "text": "Горловка. Над центром бензиновое крыло. Дмг",
                "label": "интересно",
            },
            {
                "text": "При звуках сбитый БПЛА, не попадите под осколки.",
                "label": "интересно",
            },
            {
                "text": "Богучар Воронежская область Тревога по БПЛА",
                "label": "интересно",
            },
            {"text": "От Строитель на Прохоровку БПЛА", "label": "интересно"},
            {"text": "Строитель на Белгород БПЛА. Низко", "label": "интересно"},
            {"text": "От Курахово ещё группа БПЛА", "label": "интересно"},
            {
                "text": "Богучар Воронежская область меры безопасности при сбитиях БПЛА",
                "label": "интересно",
            },
            {"text": "Яковлево БГД БПЛА", "label": "интересно"},
            {
                "text": "Кировск ЛНР и близлежащие Внимание по БПЛА",
                "label": "интересно",
            },
            {"text": "Тульская область Тревога по БПЛА", "label": "интересно"},
            {"text": "Саратовская область Тревога по БПЛА", "label": "интересно"},
            {"text": "Тамбовская область Тревога по БПЛА", "label": "интересно"},
            {"text": "Волгоградская область Тревога по БПЛА", "label": "интересно"},
            {
                "text": "Дягилево, НПЗ, Канищево Рязанская область. Тревога по БПЛА",
                "label": "интересно",
            },
            {"text": "Ещё БПЛА в направлении Богучар", "label": "интересно"},
            {"text": "Ещё в сторону Богучар от 8 БПЛА", "label": "интересно"},
            {"text": "Миллерово тревога по БПЛА", "label": "интересно"},
            {"text": "Ростовская область Тревога по БПЛА", "label": "интересно"},
            {"text": "Новошахтинск Тревога по БПЛА", "label": "интересно"},
            {"text": "Таганрог Тревога по БПЛА", "label": "интересно"},
            {"text": "БПЛА от Матвеева Кургана на Азов.", "label": "интересно"},
            {
                "text": "Счастье ЛНР пролет БПЛА в направлении Миллерово",
                "label": "интересно",
            },
            {"text": "Ещё группа БПЛА в сторону Липецка", "label": "интересно"},
            {"text": "Самарская область Внимание по БПЛА", "label": "интересно"},
            {"text": "Азов Опасность по БПЛА", "label": "интересно"},
            {"text": "Самарская область Опасность по БПЛА", "label": "интересно"},
            {
                "text": "Веселое Старобельский район ЛНР в направлении на Богучар, очередная большая группа БПЛА",
                "label": "интересно",
            },
            {
                "text": "Батайск Ростовская область Внимание по БПЛА",
                "label": "интересно",
            },
            {
                "text": "На ранее объявленных территориях идут сбития БПЛА. Быть внимательным, не попасть под осколки.",
                "label": "интересно",
            },
            {
                "text": "Кстово, Нижегородская область Внимание по БПЛА",
                "label": "интересно",
            },
            {
                "text": "Курская область. Ситуация остаётся крайне тяжёлой. Бои на ЛБС не прекращаются ни на минуту. Угрозы без изменений.",
                "label": "не интересно",
            },
            {
                "text": "Белгородская область Противник тянет резервы к Белгородской области в направлении Волчанска и Валуйки.",
                "label": "не интересно",
            },
            {
                "text": "ЛДНР без изменений Движемся вперёд. Обстрелов наших населенных пунктов стало меньше.",
                "label": "не интересно",
            },
            {
                "text": "Краснодарский Край Ростовская область Сегодня была тяжёлая ночь в Ростовской области.",
                "label": "не интересно",
            },
            {
                "text": "В Нижегородской глубинке живёт кузнец-оружейник Демков Дмитрий, он делает ножи ручной работы.",
                "label": "не интересно",
            },
            {
                "text": "Полученные от Западных 'партнёров' средства поражения продаются режимом в страны Ближнего Востока.",
                "label": "не интересно",
            },
            {
                "text": "Коллег просим удалить у себя посты со сбором. Огромное всем спасибо за помощь нашим подразделениям ПВО.",
                "label": "не интересно",
            },
            {
                "text": "Отчёт по сбору на ПВО юга и МОГи. Остатком будут оплачены доставка СДЭК бронежилетов, касок, аптечек.",
                "label": "не интересно",
            },
        ]

    def _load_keywords(self):
        """Завантажує ключові слова з файлу keywords.txt"""
        with open("config/keywords.txt", "r", encoding="utf-8") as f:
            return [line.strip().lower() for line in f if line.strip()]

    def check_keywords(self, text: str) -> bool:
        """Перевіряє, чи містить текст ключові слова"""
        text_lower = text.lower()
        return any(keyword in text_lower for keyword in self.keywords)

    async def is_interesting(self, text: str) -> bool:
        # Спочатку перевіряємо ключові слова
        if not self.check_keywords(text):
            return False

        # Якщо ключові слова є, запитуємо Cohere
        url = "https://api.cohere.ai/v1/classify"
        headers = {
            "Authorization": f"Bearer {self.api_key}",
            "Content-Type": "application/json",
        }
        data = {
            "model": "small",
            "inputs": [text],
            "examples": self.examples,
            "outputIndicator": "Связаны ли это сообщение с атакой дронов? Ответ 'Yes', или 'No",
        }

        try:
            async with aiohttp.ClientSession() as session:
                async with session.post(url, headers=headers, json=data) as response:
                    if response.status == 200:
                        result = await response.json()
                        prediction = result["classifications"][0]["prediction"].lower()
                        confidence = result["classifications"][0]["confidence"]

                        # Перевіряємо відповідь та впевненість моделі
                        return prediction == "интересно" and confidence >= 0.7
                    else:
                        print(f"Cohere помилка: {response.status}")
                        return False
        except Exception as e:
            print(f"Помилка: {str(e)}")
            return False
